// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Libp2p
{
    [Libp2pResourceType("libp2p:index:Key")]
    public partial class Key : Pulumi.ComponentResource
    {
        /// <summary>
        /// Peer ID
        /// </summary>
        [Output("peerId")]
        public Output<string> PeerId { get; private set; } = null!;

        /// <summary>
        /// Marshalled private key
        /// </summary>
        [Output("private")]
        public Output<string> Private { get; private set; } = null!;

        /// <summary>
        /// Marshalled public key
        /// </summary>
        [Output("public")]
        public Output<string> Public { get; private set; } = null!;


        /// <summary>
        /// Create a Key resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Key(string name, KeyArgs args, ComponentResourceOptions? options = null)
            : base("libp2p:index:Key", name, args ?? new KeyArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "private",
                },
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class KeyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Siye of the key (Only for RSA key)
        /// </summary>
        [Input("bits")]
        public Input<int>? Bits { get; set; }

        /// <summary>
        /// Type of the key to generate one of RSA, ED25519, SECP256K1, ECDSA
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public KeyArgs()
        {
        }
    }
}
